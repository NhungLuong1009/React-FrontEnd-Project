{"version":3,"sources":["Header/Header.jsx","GetReddits/GetReddits.jsx","ListFavReddits/ListFavReddits.jsx","App.js","index.js"],"names":["Header","searchDefault","update","searchError","useState","search","setSearch","className","onSubmit","event","preventDefault","type","value","onChange","target","onFocus","GetReddits","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","props","state","mySelectedData","myFetchData","myCleanFetchData","myCleanData","sortKeyword","subKeyword","isChecked","selectData","bind","insertData","handleSubmit","fetchInitalData","fetchDataWithNewSortKeyword","getLastSearchKeyWord","e","data","checked","this","setState","map","item","index","filteredArray","filter","JSON","parse","title","console","log","thumbnail","axios","get","then","res","children","storedData","localStorage","getItem","length","stringify","setTimeout","setItem","myData","lastSearchKeyword","newSub","child","src","to","Component","ListFavReddits","useStyles","timerID","setInterval","List","dense","labelId","ListItem","button","ListItemAvatar","Avatar","alt","ListItemText","id","primary","ListItemSecondaryAction","Checkbox","edge","Button","onClick","variant","color","disableElevation","App","exact","path","component","global","BASE_URL","SUB_LIMIT","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c21d7650.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Header.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst Header = ({searchDefault, update, searchError}) => {\n\n  const [search, setSearch] = useState(searchDefault);\n\n  function handleChange(event) {    \n    setSearch(event.target.value); \n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    update(search);\n  }\n\n  return (\n    <div className='header-wrapper'>\n\n      <div>\n        <h1>Reddits</h1>\n      </div>\n\n      <div className='search'>\n        <form onSubmit={handleSubmit}>\n        Topic: \n          <input type='text' \n                    value={search} \n                    onChange={handleChange} \n                    onFocus={() => setSearch('')}/>\n        </form>\n        <span className='search-error'>{searchError}</span>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Header;","import React, { useState, useEffect, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Header from '../Header/Header';\r\nimport './GetReddits.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nclass GetReddits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mySelectedData: [],\r\n      myFetchData: [],\r\n      myCleanFetchData: [],\r\n      myCleanData:[],\r\n      sortKeyword: \"hot\",\r\n      subKeyword: \"All\",\r\n      isChecked: false,\r\n    };\r\n    this.selectData = this.selectData.bind(this);\r\n    this.insertData = this.insertData.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.fetchInitalData = this.fetchInitalData.bind(this)\r\n    this.fetchDataWithNewSortKeyword = this.fetchDataWithNewSortKeyword.bind(this)\r\n    this.getLastSearchKeyWord = this.getLastSearchKeyWord.bind(this)\r\n  }\r\n\r\n  selectData(e,data) {\r\n    if(e.target.checked){\r\n      if (data) {\r\n        this.setState(\r\n          {\r\n            mySelectedData: [...this.state.mySelectedData, data],\r\n          },\r\n          () => {\r\n            // console.log(this.state.mySelectedData);\r\n\r\n          }\r\n        );\r\n      }\r\n    }\r\n    else{\r\n      this.state.mySelectedData.map((item,index)=>{\r\n        if(item == data){\r\n          item.isChecked = false;\r\n        }\r\n      })\r\n      let filteredArray = this.state.mySelectedData.filter(item => JSON.parse(item).title !== JSON.parse(data).title)\r\n      this.setState(\r\n        {\r\n          mySelectedData: filteredArray,\r\n        },\r\n        () => {\r\n          console.log(this.state.mySelectedData)\r\n\r\n        }\r\n      );\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  insertData(data) {\r\n    if (data) {\r\n      this.setState(\r\n        {\r\n          myCleanFetchData: [\r\n            ...this.state.myCleanFetchData,\r\n            {\r\n              title: data.data.title,\r\n              thumbnail: data.data.thumbnail,\r\n              isChecked: false,\r\n            },\r\n          ],\r\n        },\r\n        () => {\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  fetchInitalData(){\r\n     console.log(this.state.subKeyword)\r\n    axios\r\n    .get(\r\n      `https://www.reddit.com/r/${this.state.subKeyword}/${this.state.sortKeyword}.json?limit=10`\r\n    )\r\n    .then((res) => {\r\n      this.setState({\r\n        myFetchData: res.data.data.children,\r\n      });\r\n    })\r\n    .then(() => {\r\n      this.state.myFetchData.map((item, index) => {\r\n        this.insertData(item);\r\n      });\r\n\r\n      // Check selected from storage\r\n      let storedData = JSON.parse(\r\n        \"[\" + localStorage.getItem(\"myValueInLocalStorage\") + \"]\"\r\n      );\r\n      if (this.state.mySelectedData.length == 0 && storedData[0] !== null) {\r\n        storedData.map((item, index) => {\r\n          this.setState(\r\n            {\r\n              mySelectedData: [\r\n                ...this.state.mySelectedData,\r\n                JSON.stringify(item),\r\n              ],\r\n            },\r\n            () => {}\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  fetchDataWithNewSortKeyword(){\r\n    axios\r\n    .get(\r\n      `https://www.reddit.com/r/${this.state.subKeyword}/${this.state.sortKeyword}.json?limit=10`\r\n    )\r\n    .then((res) => {\r\n      this.setState({\r\n        myFetchData: res.data.data.children,\r\n      }, ()=>{\r\n\r\n        this.setState({\r\n          myCleanFetchData:[]\r\n        },()=>{\r\n          setTimeout(() => {\r\n            this.state.myFetchData.map((data,index)=>{\r\n              this.setState({\r\n                myCleanFetchData: [\r\n                  ...this.state.myCleanFetchData,\r\n                  {\r\n                    title: data.data.title,\r\n                    thumbnail: data.data.thumbnail,\r\n                    isChecked: false,\r\n                  },\r\n                ],\r\n              })\r\n            })          \r\n          }, 0);\r\n          \r\n        })\r\n\r\n      });\r\n    })\r\n  }\r\n\r\n  getLastSearchKeyWord(){\r\n    this.setState({\r\n      subKeyword: localStorage.getItem(\"lastSearchKeyWord\")\r\n    },()=>{\r\n        console.log(this.state.subKeyword)\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.getLastSearchKeyWord()\r\n    setTimeout(() => {\r\n      this.fetchInitalData()\r\n    })\r\n  }\r\n  componentDidUpdate() {\r\n  }\r\n\r\n\r\n  handleSubmit(event) {\r\n    localStorage.setItem(\r\n      \"myValueInLocalStorage\",\r\n      this.state.mySelectedData\r\n    );\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const myData = this.state.myCleanFetchData;\r\n    console.log(myData)\r\n    const lastSearchKeyword = localStorage.getItem(\"lastSearchKeyWord\")\r\n    return (\r\n      <div>\r\n        <Header searchDefault={lastSearchKeyword} update={(newSub) => this.setState({subKeyword:newSub},()=>{\r\n          this.fetchDataWithNewSortKeyword()\r\n          localStorage.setItem(\r\n            \"lastSearchKeyWord\",\r\n            this.state.subKeyword\r\n          );\r\n        })}/> \r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <ul>\r\n            {myData.length !== null &&\r\n              myData.map((item, index) => {\r\n                if (\r\n                  this.state.mySelectedData.filter(\r\n                    (child) => JSON.parse(child).title == item.title\r\n                  ).length > 0\r\n                ) {\r\n                  item.isChecked = true;\r\n                }\r\n                else{\r\n                  item.isChecked = false;\r\n                }\r\n                return (\r\n                  <li key={index}>\r\n                    <img src={item.thumbnail}></img>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value={JSON.stringify(item)}\r\n                      checked={item.isChecked}\r\n                      onChange={(e) =>\r\n                        this.selectData(e,\r\n                          JSON.stringify({\r\n                            title: item.title,\r\n                            thumbnail: item.thumbnail,\r\n                            isChecked: item.isChecked,\r\n                          })\r\n                        )\r\n                      }\r\n                    /><span className=\"GetReddits__title\">{item.title}</span>\r\n                     <br />\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n          <input type=\"submit\" value=\"Add to Favorite\"/>\r\n        </form>\r\n        <Link to=\"/favReddits\">Favorite reddits</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GetReddits;\r\n","import React, { useState, useEffect, Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport './ListFavReddits.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass ListFavReddits extends Component {\r\n  useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n  }));\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mySelectedData: [],\r\n      myCleanData: [],\r\n    };\r\n    this.selectData = this.selectData.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  selectData(e, data) {\r\n    if (e.target.checked) {\r\n      if (data) {\r\n        let filteredArray = this.state.myCleanData.filter(\r\n          (item) => JSON.parse(item).title !== JSON.parse(data).title\r\n        );\r\n        this.setState(\r\n          {\r\n            myCleanData: filteredArray,\r\n          },\r\n          () => {}\r\n        );\r\n      }\r\n    } else {\r\n      this.setState(\r\n        { myCleanData: [...this.state.myCleanData, data] },\r\n        () => {}\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      let storedData = JSON.parse(\r\n        \"[\" + localStorage.getItem(\"myValueInLocalStorage\") + \"]\"\r\n      );\r\n      if (this.state.mySelectedData.length == 0 && storedData[0] !== null) {\r\n        storedData.map((item, index) => {\r\n          this.setState(\r\n            {\r\n              mySelectedData: [\r\n                ...this.state.mySelectedData,\r\n                JSON.stringify(item),\r\n              ],\r\n            },\r\n            () => {}\r\n          );\r\n          this.setState(\r\n            {\r\n              myCleanData: [...this.state.myCleanData, JSON.stringify(item)],\r\n            },\r\n            () => {}\r\n          );\r\n        });\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    localStorage.setItem(\"myValueInLocalStorage\", this.state.myCleanData);\r\n    console.log(this.state.myCleanData);\r\n    this.setState(\r\n      {\r\n        mySelectedData: this.state.myCleanData,\r\n      },\r\n      () => {}\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const myData = this.state.mySelectedData;\r\n    return (\r\n      <div className=\"favReddits__container\">\r\n        <Link to=\"/\">List all reddits</Link>\r\n        {\r\n          <form >\r\n             <List dense className={ListFavReddits.root}>\r\n              {myData.length !== null && myData.map((item, index) => {\r\n                const labelId = `checkbox-list-secondary-label-${index}`;\r\n                return (\r\n                  <ListItem key={index} button>\r\n                    <ListItemAvatar>\r\n                      <Avatar\r\n                        alt={`Avatar n°${JSON.parse(item).title + 1}`}\r\n                        src={JSON.parse(item).thumbnail}\r\n                      />\r\n                    </ListItemAvatar>\r\n                    <ListItemText id={labelId} primary={JSON.parse(item).title} />\r\n                    <ListItemSecondaryAction>\r\n                      <Checkbox\r\n                        edge=\"end\"\r\n                        onChange={(e) => this.selectData(e, item)}\r\n                      />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n            <Button onClick={(e) => this.handleSubmit(e)} variant=\"contained\" color=\"primary\" disableElevation>\r\n                Delete favorite post(s)\r\n            </Button>\r\n          </form>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListFavReddits;\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom';\nimport GetReddits from './GetReddits/GetReddits'\nimport ListFavReddits from './ListFavReddits/ListFavReddits'\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n\nfunction App() {\n\n  return (\n    <Router>\n    <div>\n         <Switch>\n           <Route exact path=\"/\" component={GetReddits}/>\n           <Route exact path=\"/favReddits\" component={ListFavReddits}/>\n\n           {/* <Route exact path=\"/comments/:sub/:parentId\" component={Comments} /> */}\n         </Switch>\n       <div className='app-bottom'></div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nglobal.BASE_URL = 'https://www.reddit.com/r';\nglobal.SUB_LIMIT = 10;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}